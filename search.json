[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COMP/STAT112 Notebook",
    "section": "",
    "text": "Welcome\nWelcome to my online portfolio for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "ica/quarto-demo.html",
    "href": "ica/quarto-demo.html",
    "title": "\n1  My first Quarto document\n",
    "section": "",
    "text": "1.1 Intro\nMacalester College is in the Twin Cities. It has:\nCheck it out for yourself:",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My first Quarto document</span>"
    ]
  },
  {
    "objectID": "ica/quarto-demo.html#intro",
    "href": "ica/quarto-demo.html#intro",
    "title": "\n1  My first Quarto document\n",
    "section": "",
    "text": "four seasons\nbagpipes\ndelightful students",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My first Quarto document</span>"
    ]
  },
  {
    "objectID": "ica/quarto-demo.html#exercise-1-deduce-quarto-features",
    "href": "ica/quarto-demo.html#exercise-1-deduce-quarto-features",
    "title": "\n1  My first Quarto document\n",
    "section": "\n1.2 Exercise 1: Deduce Quarto features",
    "text": "1.2 Exercise 1: Deduce Quarto features\nCheck out the appearance and contents of this document. Thoughts?\nIn the toolbar at the top of this document, Render the .qmd file into a .html file. Where is this file stored? Thoughts about its appearance / contents? Can you edit it?\nToggling between the .qmd and .html files, explain the purpose of the following features in the .qmd file:\n*\n**\n#\n-\n\\\n![](url)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My first Quarto document</span>"
    ]
  },
  {
    "objectID": "ica/quarto-demo.html#exercise-2-code",
    "href": "ica/quarto-demo.html#exercise-2-code",
    "title": "\n1  My first Quarto document\n",
    "section": "\n1.3 Exercise 2: Code",
    "text": "1.3 Exercise 2: Code\nHow does this appear in the .qmd? The .html? So…?!\nseq(from = 100, to = 1000, by = 50)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My first Quarto document</span>"
    ]
  },
  {
    "objectID": "ica/quarto-demo.html#exercise-3-chunks",
    "href": "ica/quarto-demo.html#exercise-3-chunks",
    "title": "\n1  My first Quarto document\n",
    "section": "\n1.4 Exercise 3: Chunks",
    "text": "1.4 Exercise 3: Chunks\nQuarto isn’t a mind reader – we must distinguish R code from text. We do so by putting code inside an R chunk:\n\nPut the seq() code in the chunk.\nPress the green arrow in the top right of the chunk. What happens in the qmd?\nRender. What appears in the html: R code, output, or both?",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My first Quarto document</span>"
    ]
  },
  {
    "objectID": "ica/quarto-demo.html#exercise-4-practice",
    "href": "ica/quarto-demo.html#exercise-4-practice",
    "title": "\n1  My first Quarto document\n",
    "section": "\n1.5 Exercise 4: Practice",
    "text": "1.5 Exercise 4: Practice\n\nUse R code to create the following sequence: 10 10 10 10\nStore the sequence as four_tens.\nUse an R function (which we haven’t learned!) to add up the numbers in four_tens.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My first Quarto document</span>"
    ]
  },
  {
    "objectID": "ica/quarto-demo.html#exercise-5-fix-this-code",
    "href": "ica/quarto-demo.html#exercise-5-fix-this-code",
    "title": "\n1  My first Quarto document\n",
    "section": "\n1.6 Exercise 5: Fix this code",
    "text": "1.6 Exercise 5: Fix this code\nCode is a form of communication, and the code below doesn’t cut it.\nPut the code in a chunk and fix it.\nRep(x = 1, times = 10) seq(from=100,to=1000,length=20) theNumberofStudentsinthisclass&lt;-27",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My first Quarto document</span>"
    ]
  },
  {
    "objectID": "ica/quarto-demo.html#exercise-6-comments",
    "href": "ica/quarto-demo.html#exercise-6-comments",
    "title": "\n1  My first Quarto document\n",
    "section": "\n1.7 Exercise 6: Comments",
    "text": "1.7 Exercise 6: Comments\nRun the chunk below. Notice that R ignores anything in a line starting with a pound sign (#). If we took the # away we’d get an error!\n\nCode# This is a comment\n4 + 5\n\n[1] 9\n\n\nWe’ll utilize this feature to comment our code, i.e. leave short notes about what our code is doing. Below, replace the ??? with an appropriate comment.\n\nCode# ???\ntemperature_c &lt;- 10\ntemperature_f &lt;- temperature_c * 9/5 + 32\ntemperature_f\n\n[1] 50",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My first Quarto document</span>"
    ]
  },
  {
    "objectID": "bw/bw-uni.html",
    "href": "bw/bw-uni.html",
    "title": "\n2  Univariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking univariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nCodehikes &lt;- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n\n\n\nCodeggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\",fill = \"pink\", binwidth = 50) +\n  labs(x = \"Elevation (feet)\", y = \"Number of Hikes\", title = \"Hights of Peaks\") +\n  theme_minimal()",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-bi.html",
    "href": "bw/bw-bi.html",
    "title": "\n3  Bivariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking bivariate visualization. The visualization will not perfect the first time but you are expected to improve it throughout the semester especially after covering advanced topics such as effective viz.\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nCodeelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n\n\nCodeggplot(elections, aes(y = repub_pct_20, x = median_rent)) +\n  geom_point() +\n  labs(x = \"Median Rent (by County)\", y = \"Percent Voted Republican in 2020\", caption = \"Percent of a county that voted republican in the 2020 US election compaed to the median rent in that county\") +\n  theme_minimal()",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-tri.html",
    "href": "bw/bw-tri.html",
    "title": "\n4  Trivariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking trivariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nCodeeducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\n\n\n\nCodeggplot(education, aes(y = expend, x = sat, color = salary)) +\n  geom_point() +\n  geom_smooth(se=FALSE, alpha = 0.5) +\n  labs(x = \"Average SAT score\", y = \"Expdeture\", color = \"Average Salery of Teacher\") +\n  theme_minimal() +\n  scale_color_viridis_c()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Trivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-quad.html",
    "href": "bw/bw-quad.html",
    "title": "\n5  Quadvariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking quadvariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nCodeweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\")\n\n\n\nCode#| fig-alt: \"The graph shows the corralation betewwn twperature in celcius at 9am and 3pm at three dirrerent locations. It allso accouns for the weater of that day and if it rained of not. Showin simmilar temperaturs at each location\"\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location, shape = raintoday)) + \n  geom_point(alpha = 0.5) +\n  labs(x = \"Temp at 9am (C°)\", y = \"Temp at 3pm (C°)\", color = \"Location\", shape = \"If it Rained\") +\n  scale_color_viridis_d() +\n  theme_minimal()\n\nWarning: Removed 69 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Quadvariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-spatial.html",
    "href": "bw/bw-spatial.html",
    "title": "\n6  Spatial Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking spatial visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nCodeelections_by_state &lt;-  read.csv(\"https://mac-stat.github.io/data/election_2020_by_state.csv\")\nelections_by_counties &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n\n\nCodestates_map &lt;- map_data(\"state\")\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nCodelibrary(rnaturalearth)\n\n\n\nCodeggplot(elections_by_state, aes(map_id = state_name, fill = repub_pct_20)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_viridis_c() +\n  labs(fill= \"Percent of State Voted Republican in 2020\", caption = \"A map of the United Stated of American based on the percentage of each state population the voted Refublican in the 2020 election\")",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "bw/Exam_1.html",
    "href": "bw/Exam_1.html",
    "title": "7  Reasearch question",
    "section": "",
    "text": "The consumption of food is broken up into 11 different staple groups per country. but the amount consumed varies heavly based on location. For example in Argentina the average person consumes 8.77 kilograms of rice a year but in Bangladesh its 171.73 kilograms a year. The data really shows that food consumption is based in location for many staples.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Reasearch question</span>"
    ]
  },
  {
    "objectID": "bw/Exam_2.html",
    "href": "bw/Exam_2.html",
    "title": "\n8  Research Question\n",
    "section": "",
    "text": "Codelibrary(tidytuesdayR)\nlibrary(tidyverse)\n\ntuesdata &lt;- tt_load('2020-02-18')\nfc &lt;- tuesdata$food_consumption\n\n\n\nCode#Question 1\n#fc |&gt;\n#  group_by(country) |&gt;\n#  sum(consumption) |&gt;\n#  arrange(desc(consumption)) |&gt;\n#  head(5)\n\n\n\nCode#Question 2\n#fc |&gt;\n # group_by(food_category) |&gt;\n  #summarize(max(consumption)) |&gt;\n  #select(food_category, country, consumption) |&gt;\n  #slice_max() |&gt;\n  #arrange(desc(consumption))",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Research Question</span>"
    ]
  },
  {
    "objectID": "bw/Solo_Project.html",
    "href": "bw/Solo_Project.html",
    "title": "",
    "section": "",
    "text": "Best Work9  Solo_Project.html CodeShow All CodeHide All CodeView Source\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodelibrary(rnaturalearth)\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nCodelibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nCodelibrary(maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nCodelibrary(gplots)\n\n\nAttaching package: 'gplots'\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\n\n\nCodecovid &lt;- read_csv(\"~/Documents/GitHub/portfolio-mwillett965/bw/222c9d85e93540dba523939cfb718d76_0.csv\")\n\nRows: 67 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): FULL_, GEOID, LABEL, STAETFP, COUNTY, COUNTYFP, Data_Source, Date_...\ndbl (21): OBJECTID, County_Pos_Cases, County_Population, County_Rate_Per_100...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodeco_counties &lt;- map_data(\"county\", \"colorado\") \n\n\n\nCodecovid_cases &lt;- covid |&gt;\n    mutate(county = str_to_lower(COUNTY)) |&gt;\n  select(county, County_Pos_Cases, County_Rate_Per_100_000 ) |&gt;\n  filter(county != \"out of state\") |&gt;\n  filter(county != \"unknown\")\n\n\n\nCodecovid_county &lt;- covid_cases |&gt;\n  left_join(co_counties, join_by(county == subregion)) \n\n\n\nCodeggplot(covid_county) + \n  geom_polygon(aes(x = long, y = lat, group = group, fill = County_Pos_Cases)) +\n  scale_fill_viridis_c() +\n  labs(x =\" \", y = \" \", fill = \"Positive Cases\", title = \"Positive Covid 19 cases in Colorado by County\", caption = \"The map shows the number of positive covid 19 reports in the State of Colordo. The state is seperated by county with most counties under 2000 reported positives.\" )",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Solo_Project.html</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html",
    "href": "ica/ica-uni.html",
    "title": "\n10  Univariate Viz\n",
    "section": "",
    "text": "Use this file for practice with the univariate viz in-class activity. Refer to the class website for details.\n\nCode# Import data\nhikes &lt;- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n\n\n\n11 Exercise 1\n\nCodehead(hikes)\n\n             peak elevation difficulty ascent length time    rating\n1     Mt. Marcy        5344          5   3166   14.8 10.0  moderate\n2 Algonquin Peak       5114          5   2936    9.6  9.0  moderate\n3   Mt. Haystack       4960          7   3570   17.8 12.0 difficult\n4   Mt. Skylight       4926          7   4265   17.9 15.0 difficult\n5 Whiteface Mtn.       4867          4   2535   10.4  8.5      easy\n6       Dix Mtn.       4857          5   2800   13.2 10.0  moderate\n\n\n\n12 Exercise 2\n\nCode# Load the package\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n13 Exercise 3\n\nCodeggplot(hikes, aes(x = rating))\n\n\n\n\n\n\n\n\n14 Exercise 4\n\nCode# adds bars with the count of how many in each rating\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nCode# Builds graph and capitalizes the title of x and y axis\nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\nCode# adds bars and makes them blue\nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\nCode# bar graph filled with blue with orange outline\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\nCode# bar graph with blue and orange outling but just a grid background\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n15 Exercise 8\n\nCodeggplot(hikes, aes(x = elevation)) + geom_bar()\n\n\n\n\n\n\n\n\n16 Exercise 9\n\nCode# makes a histogram\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nCode# seperartes the bars of the histogram with a white line\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nCode# white outline with a blue fill\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\") \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nCode# clarifys the x and y axis titles\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nCode# made the bars thicker and combined setions\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 50) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\nCode#made the bars thinner and changed their color to white\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 5) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\nCode# made the width thicker than the orignal\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 200) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n17 Exercise 11\n\nCode#makes line blue\nggplot(hikes, aes(x = elevation)) +\n  geom_density(color = \"blue\")\n\n\n\n\n\n\n\n\nCode# fills everyting under line with blue\nggplot(hikes, aes(x = elevation)) +\n  geom_density(fill = \"blue\")\n\n\n\n\n\n\n\n\n18 Exercise 14\n\nCode# Data on students in this class\nsurvey &lt;- read.csv(\"https://hash-mac.github.io/stat112site-s25/data/survey.csv\")\n\n# World Cup data\nworld_cup &lt;- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html",
    "href": "ica/ica-bi.html",
    "title": "\n11  Bivariate Viz\n",
    "section": "",
    "text": "Use this file for practice with the bivariate viz in-class activity. Refer to the class website for details.\n\nCode# Load the package\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nCode# Import data\nsurvey &lt;- read.csv(\"https://hash-mac.github.io/stat112site-s25/data/survey.csv\")\n\n# How many students have now filled out the survey? 49\ndim(survey)\n\n[1] 49  4\n\nCode# What type of variables do we have? catagorical?\n\n\n\nCode# Load data\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n\n\n12 Exercise 2\n\nCode# Set up the plotting frame\n# How does this differ than the frame for our histogram of repub_pct_20 alone?\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))\n\n\n\n\n\n\n\n\nCode# Add a layer of points for each county\n# Take note of the geom!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()\n\n\n\n\n\n\n\n\nCode# Change the shape of the points\n# What happens if you change the shape to another number?- differnt shapes\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(shape = 5)\n\n\n\n\n\n\n\n\nCode# YOU TRY: Modify the code to make the points \"orange\"\n# NOTE: Try to anticipate if \"color\" or \"fill\" will be useful here. Then try both.- fill did not work- color made points blue\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(color=\"blue\")\n\n\n\n\n\n\n\n\nCode# Add a layer that represents each county by the state it's in\n# Take note of the geom and the info it needs to run!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_text(aes(label = state_abbr))\n\n\n\n\n\n\n\n\n13 Exercise 4\n\nCodeggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\n\nCodeggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\n\nCodeggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n14 Exercise 5\n\nCode# Scatterplot of repub_pct_20 vs median_rent\nggplot(elections, aes(y = repub_pct_20, x = median_rent)) +\n  geom_point()\n\n\n\n\n\n\nCode# Scatterplot of repub_pct_20 vs median_age\n\nggplot(elections, aes(y = repub_pct_20, x = median_age)) +\n  geom_point()\n\n\n\n\n\n\n\n\n15 Exercise 6\n\nCodeggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_point()\n\n\n\n\n\n\n\n\n16 Exercise 7\n\nCode# Side-by-side violin plots\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_violin()\n\n\n\n\n\n\n\n\nCode# Side-by-side boxplots (defined below)\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n17 Exercise 8\n\nCodeggplot(elections, aes(x = repub_pct_20)) +\n  geom_density()\n\n\n\n\n\n\n\n\n18 Exercise 9\n\nCode# Name two \"bad\" things about this plot- the colrs are wrong, and is confusing to read\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density()\n\n\n\n\n\n\n\n\nCode# What does scale_fill_manual do?- manuely picks the colors\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n\n\n\n\n\n\n\nCode# What does alpha = 0.5 do?- changes color opasity\n# Play around with different values of alpha, between 0 and 1\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density(alpha = 0.2) +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n\n\n\n\n\n\n\nCode# What does facet_wrap do?!- seperates the graphs\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\")) +\n  facet_wrap(~ historical)\n\n\n\n\n\n\n\n\nCode# Let's try a similar grouping strategy with a histogram instead of density plot.\n# Why is this terrible?- It is hard to read and look at and dosent mach the oters or the data\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_histogram(color = \"white\") +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n19 Exercise 11\n\nCode# Plot 1: adjust this to recreate the top plot\nggplot(elections, aes(x = historical)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nCode# Plot 2: adjust this to recreate the bottom plot\nggplot(elections, aes(x = winner_20)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n20 Exercise 12\n\nCode# A stacked bar plot\n# How are the \"historical\" and \"winner_20\" variables mapped to the plot, i.e. what roles do they play?\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nCode# A faceted bar plot\nggplot(elections, aes(x = winner_20)) +\n  geom_bar() +\n  facet_wrap(~ historical)\n\n\n\n\n\n\n\n\nCode# A side-by-side bar plot\n# Note the new argument to geom_bar\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"dodge\")\n\n\n\n\n\n\n\n\nCode# A proportional bar plot\n# Note the new argument to geom_bar\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\n\n21 Exercise 13\n\nCodeweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\")\n\n\n\nCodeggplot(weather, aes(x = temp3pm, fill = location)) +\n   geom_density(alpha = 0.5)\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html",
    "href": "ica/ica-multi.html",
    "title": "\n12  Mulivariate Viz\n",
    "section": "",
    "text": "Use this file for practice with the mulivariate viz in-class activity. Refer to the class website for details.\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCode# Import data\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |&gt; \n  mutate(date = as.Date(date))  \n\n# Check out the first 6 rows location,tem, ect\n# What are the units of observation?\nhead(weather)\n\n        date   location mintemp maxtemp rainfall evaporation sunshine\n1 2020-01-01 Wollongong    17.1    23.1        0          NA       NA\n2 2020-01-02 Wollongong    17.7    24.2        0          NA       NA\n3 2020-01-03 Wollongong    19.7    26.8        0          NA       NA\n4 2020-01-04 Wollongong    20.4    35.5        0          NA       NA\n5 2020-01-05 Wollongong    19.8    21.4        0          NA       NA\n6 2020-01-06 Wollongong    18.3    22.9        0          NA       NA\n  windgustdir windgustspeed winddir9am winddir3pm windspeed9am windspeed3pm\n1         SSW            39        SSW        SSE           20           15\n2         SSW            37          S        ENE           13           15\n3          NE            41        NNW        NNE            7           17\n4         SSW            78         NE        NNE           15           17\n5         SSW            57        SSW          S           31           35\n6          NE            35        ESE         NE           17           20\n  humidity9am humidity3pm pressure9am pressure3pm cloud9am cloud3pm temp9am\n1          69          64      1014.9      1014.0        8        1    19.1\n2          72          54      1020.1      1017.7        7        1    19.8\n3          72          71      1017.5      1013.0        6       NA    23.4\n4          77          69      1008.8      1003.9       NA       NA    24.5\n5          70          75      1018.9      1019.9       NA        7    20.7\n6          71          71      1021.2      1018.2       NA       NA    20.9\n  temp3pm raintoday risk_mm raintomorrow\n1    22.9        No     0.0           No\n2    23.6        No     0.0           No\n3    25.7        No     0.0           No\n4    26.7        No     0.0           No\n5    20.0        No     0.0           No\n6    22.6        No     0.8           No\n\nCode# How many data points do we have? 2367\n\n\n# What type of variables do we have? numerical and catigorical\n\n\n\nCode# Plot 1 (no facets & starting from a density plot of temp3pm)\nggplot(weather, aes(x = temp3pm)) + \n  geom_density()+facet_wrap(~ temp3pm)\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\nWarning: Groups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped.\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\n\nCode#ggplot(weather, aes(x = temp3pm)) + geom_histogram +\n#  facet_wrap(~ historical)\n\n\n\nCode# Don't worry about the syntax (we'll learn it soon)\nwoll &lt;- weather |&gt;\n  filter(location == \"Wollongong\") |&gt; \n  mutate(date = as.Date(date))  \n\n\n\nCode# How often does it raintoday?\n# Fill your geometric layer with the color blue.\nggplot(woll, aes(x = raintoday))\n\n\n\n\n\n\nCode# If it does raintoday, what does this tell us about raintomorrow?\n# Use your intuition first\nggplot(woll, aes(x = raintoday))\n\n\n\n\n\n\nCode# Now compare different approaches\n\n# Default: stacked bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n\n\n\n\n\n\nCode# Side-by-side bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"dodge\")\n\n\n\n\n\n\nCode# Proportional bars\n# position = \"fill\" refers to filling the frame, nothing to do with the color-related fill\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\n\nCode# Instead of a curve that captures the general TREND,\n# draw a line that illustrates the movement of RAW temperatures from day to day\n# NOTE: We haven't learned this geom yet! Guess.\nggplot(woll, aes(y = temp3pm, x = date))\n\n\n\n\n\n\n\n\nCode# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)\nggplot(weather, aes(y = temp3pm, x = date)) + \n  geom_line()+geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\n\n\n\n\n\n\n\n13 Exercises\n\nCode# Import and check out data\neducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\nhead(education)\n\n       State expend ratio salary frac verbal math  sat  fracCat\n1    Alabama  4.405  17.2 31.144    8    491  538 1029   (0,15]\n2     Alaska  8.963  17.6 47.951   47    445  489  934 (45,100]\n3    Arizona  4.778  19.3 32.175   27    448  496  944  (15,45]\n4   Arkansas  4.459  17.1 28.934    6    482  523 1005   (0,15]\n5 California  4.992  24.0 41.078   45    417  485  902  (15,45]\n6   Colorado  5.443  18.4 34.571   29    462  518  980  (15,45]\n\n\n\nCodeggplot(education, aes(sat))+\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n14 Exercise 2\n\nCodeggplot(education, aes(y = expend, x = sat)) +\n  geom_point()+geom_smooth()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nCodeggplot(education, aes(y = salary, x = sat)) +\n  geom_point()+geom_smooth()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n15 Exercise 3\n\nCodeggplot(education, aes(y = expend, x = sat, color = salary)) +\n  geom_point()+geom_smooth(se=FALSE) \n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\n\n\n16 Exercise 4\n\nCodeggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n17 Exercise 5\n\nCodeggplot(education, aes(x = fracCat)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nCodeggplot(education, aes(x = sat, fill = fracCat)) +\n  geom_density(alpha=0.5)\n\n\n\n\n\n\n\n\nCodeggplot(education, aes(y = expend, x = sat, color = fracCat)) +\n  geom_point()+geom_smooth(se=FALSE) \n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nCode#stars(plot_data,\n # flip.labels = FALSE,\n # key.loc = c(10, 1.5),\n # cex = 1, \n # draw.segments = TRUE\n#)\n\n\n\nCode#stars(plot_data,\n # flip.labels = FALSE,\n#  locations = data.matrix(as.data.frame(state.center)),  # added external data to arrange by geo location\n#  key.loc = c(-110, 28),\n#  cex = 1, \n#  draw.segments = TRUE\n#)",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html",
    "href": "ica/ica-spatial.html",
    "title": "\n13  Spatial Viz\n",
    "section": "",
    "text": "Use this file for practice with the spatial viz in-class activity. Refer to the class website for details.\n\nCode# Load tidyverse package for plotting and wrangling\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCode# Import the data and only keep 2 addresses\nenergy &lt;- read.csv(\"https://mac-stat.github.io/data/MacNaturalGas.csv\") |&gt; \n  mutate(date = as.Date(paste0(month, \"/1/\", year), \"%m/%d/%Y\")) |&gt; \n  filter(address != \"c\")\n\n# Check it out\nhead(energy)\n\n  month year  price therms hdd address renovated       date\n1     6 2005  35.21     21   0       a        no 2005-06-01\n2     7 2005  37.37     21   0       a        no 2005-07-01\n3     8 2005  36.93     21   3       a        no 2005-08-01\n4     9 2005  62.36     39  61       a        no 2005-09-01\n5    10 2005 184.15    120 416       a        no 2005-10-01\n6    11 2005 433.35    286 845       a        no 2005-11-01\n\n\n\nCodeggplot(energy, aes(x = therms)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 12 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nCodeggplot(energy, aes(y = therms, x = date)) +\n  geom_point()\n\nWarning: Removed 12 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n14 Exercise 1\n\nCodefave_places &lt;- read.csv(\"https://ajohns24.github.io/data/112/our_fave_places.csv\")\n\n# Check it out\nhead(fave_places)\n\n  latitude longitude\n1       46      -123\n2       33        52\n3       48       -90\n4       36      -112\n5       59        25\n6       39      -106\n\n\n\nCode# Load the leaflet package\nlibrary(leaflet)\n\n# Just a plotting frame\nleaflet(data = fave_places)\n\n\n\n\n\n\nCode# Now what do we have?- a map of the world\nleaflet(data = fave_places) |&gt; \n  addTiles()\n\n\n\n\n\n\nCode# Now what do we have? map with points\n# longitude and latitude refer to the variables in our data\nleaflet(data = fave_places) |&gt; \n  addTiles() |&gt; \n  addMarkers(lng = ~longitude, lat = ~latitude)\n\n\n\n\n\n\nCode# Since we named them \"longitude\" and \"latitude\", the function\n# automatically recognizes these variables. No need to write them!\nleaflet(data = fave_places) |&gt; \n  addTiles() |&gt; \n  addMarkers()\n\n\n\n\n\n\n15 Exercise 2\n\nCode# Load package needed to change color\nlibrary(gplots)\n\n\nAttaching package: 'gplots'\n\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\nCode# We can add colored circles instead of markers at each location\nleaflet(data = fave_places) |&gt; \n  addTiles() |&gt; \n  addCircles(color = col2hex(\"red\"))\n\n\n\n\n\n\nCode# We can change the background\n# Mark locations with yellow dots\n# And connect the dots, in their order in the dataset, with green lines\n# (These green lines don't mean anything here, but would if this were somebody's travel path!)\nleaflet(data = fave_places) |&gt;\n  addProviderTiles(\"USGS\") |&gt;\n  addCircles(weight = 10, opacity = 1, color = col2hex(\"yellow\")) |&gt;\n  addPolylines(\n    lng = ~longitude,\n    lat = ~latitude,\n    color = col2hex(\"green\")\n  )\n\n\n\n\n\n\n16 Exercise 3\n\nCode# Import starbucks location data\nstarbucks &lt;- read.csv(\"https://mac-stat.github.io/data/starbucks.csv\")\n\n\n\nCode# Don't worry about the syntax\nstarbucks_mn &lt;- starbucks |&gt;   \n  filter(Country == \"US\", State.Province == \"MN\")\n\n\n\nCodeleaflet(data = starbucks_mn) |&gt; \n  addTiles() |&gt; \n  addMarkers()\n\nAssuming \"Longitude\" and \"Latitude\" are longitude and latitude, respectively\n\n\n\n\n\n\n\nCodeggplot(starbucks, aes(x = Longitude, y = Latitude)) +\n  geom_point(alpla = 0.2) \n\nWarning in geom_point(alpla = 0.2): Ignoring unknown parameters: `alpla`\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n17 Exercise 4\n\nCode# Load the package\nlibrary(rnaturalearth)\n\n# Get info about country boundaries across the world\n# in a \"sf\" or simple feature format\nworld_boundaries &lt;- ne_countries(returnclass = \"sf\")\n\n\n\nCode# What does this code produce?\n# What geom are we using for the point map?\nggplot(world_boundaries) + \n  geom_sf()\n\n\n\n\n\n\n\n\nCode# Load package needed to change map theme\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nCode# Add a point for each Starbucks\n# NOTE: The Starbucks info is in our starbucks data, not world_boundaries\n# How does this change how we use geom_point?!\nggplot(world_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3, size = 0.2, color = \"darkgreen\"\n  ) +\n  theme_map()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nStarbucks is mosly in the US and Western Europe with locations in east aisa as well. There are fewer in south america and africa.\n\n18 Exercise 5\n\nCode# We'll learn this syntax soon! Don't worry about it now.\nstarbucks_cma &lt;- starbucks |&gt; \n  filter(Country %in% c('CA', 'MX', 'US'))\n\n\n\nCodecma_boundaries &lt;- ne_states(\n  country = c(\"canada\", \"mexico\", \"united states of america\"),\n  returnclass = \"sf\")\n\n\n\nCode# Just the boundaries\nggplot(cma_boundaries) + \n  geom_sf()\n\n\n\n\n\n\n\n\nCode# Add the points\n# And zoom in\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3,\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50)) +\n  theme_map()\n\n\n\n\n\n\n\n\n19 Exercise 6\n\nCodestarbucks_midwest &lt;- starbucks |&gt; \n  filter(State.Province %in% c(\"MN\", \"ND\", \"SD\", \"WI\"))\n\n\n\nCode# Load packages\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nCodelibrary(maps)\n\n\nAttaching package: 'maps'\n\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nCode# Get the boundaries\nmidwest_boundaries &lt;- st_as_sf(\n  maps::map(\"county\",\n            region = c(\"minnesota\", \"wisconsin\", \"north dakota\", \"south dakota\"), \n            fill = TRUE, plot = FALSE))\n\n# Check it out\nhead(midwest_boundaries)\n\nSimple feature collection with 6 features and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -96.81268 ymin: 45.05167 xmax: -93.01397 ymax: 48.53526\nGeodetic CRS:  +proj=longlat +ellps=clrk66 +no_defs +type=crs\n                                     ID                           geom\nminnesota,aitkin       minnesota,aitkin MULTIPOLYGON (((-93.03689 4...\nminnesota,anoka         minnesota,anoka MULTIPOLYGON (((-93.51817 4...\nminnesota,becker       minnesota,becker MULTIPOLYGON (((-95.14537 4...\nminnesota,beltrami   minnesota,beltrami MULTIPOLYGON (((-95.58655 4...\nminnesota,benton       minnesota,benton MULTIPOLYGON (((-93.77027 4...\nminnesota,big stone minnesota,big stone MULTIPOLYGON (((-96.10794 4...\n\n\n\nCode ggplot(midwest_boundaries) + \n  geom_sf() + \n   geom_point(\n     data = starbucks_midwest,\n     aes(x = Longitude, y = Latitude),\n     alpha = 0.7,\n     size = 0.2, \n     color = 'darkgreen'\n   ) + \n   theme_map()\n\n\n\n\n\n\n\n#Exercise 7\n\nCode# Point map (we made this earlier)\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3,\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50), ylim = c(14.54, 83.11)) +\n  theme_map()\n\n\n\n\n\n\n\n\nCode# What changed in the plot?\n# What changed in our code?!\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_density_2d(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50), ylim = c(14.54, 83.11)) +\n  theme_map()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nCodeelections_by_state &lt;-  read.csv(\"https://mac-stat.github.io/data/election_2020_by_state.csv\")\nelections_by_counties &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n\n\nCode# Don't worry about the code!\n\nelections_by_state &lt;- elections_by_state |&gt; \n  filter(state_abbr != \"DC\") |&gt; \n  select(state_name, state_abbr, repub_pct_20) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(30, 70, by = 5), \n               labels = c(\"30-34\", \"35-39\", \"40-44\", \"45-49\",\n                          \"50-54\", \"55-59\", \"60-64\", \"65-70\"), \n               include.lowest = TRUE))\n\nelections_by_counties &lt;- elections_by_counties |&gt; \n  select(state_name, state_abbr, county_name, county_fips,\n          repub_pct_20, median_age, median_rent) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(0, 100, by = 10),\n               labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\",\n                          \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\"),\n               include.lowest = TRUE))\n\n\n#Exercise 8\n\nCode# Get the latitude and longitude coordinates of state boundaries\nstates_map &lt;- map_data(\"state\")\n\n# Check it out\nhead(states_map)\n\n       long      lat group order  region subregion\n1 -87.46201 30.38968     1     1 alabama      &lt;NA&gt;\n2 -87.48493 30.37249     1     2 alabama      &lt;NA&gt;\n3 -87.52503 30.37249     1     3 alabama      &lt;NA&gt;\n4 -87.53076 30.33239     1     4 alabama      &lt;NA&gt;\n5 -87.57087 30.32665     1     5 alabama      &lt;NA&gt;\n6 -87.58806 30.32665     1     6 alabama      &lt;NA&gt;\n\n\n\nCode# Note where the dataset, elections_by_state, is used\n# Note where the background map, states_map, is used\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_pct_20)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() \n\n\n\n\n\n\n\n\nCode# Make it nicer!\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_pct_20)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_gradientn(name = \"% Republican\", colors = c(\"blue\", \"purple\", \"red\"), values = scales::rescale(seq(0, 100, by = 5)))\n\n\n\n\n\n\n\n\nCodeggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map()\n\n\n\n\n\n\n\n\nCode# Load package needed for refining color palette\nlibrary(RColorBrewer)\n\n# Now fix the colors\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_manual(values = rev(brewer.pal(8, \"RdBu\")), name = \"% Republican\")\n\n\n\n\n\n\n\n\nCode# Get only the starbucks data from the US\nstarbucks_us &lt;- starbucks |&gt; \n  filter(Country == \"US\")\n\n# Map it\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  geom_point(\n    data = starbucks_us,\n    aes(x = Longitude, y = Latitude),\n    size = 0.05,\n    alpha = 0.2,\n    inherit.aes = FALSE\n  ) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_manual(values = rev(brewer.pal(8, \"RdBu\")), name = \"% Republican\")\n\n\n\n\n\n\n\n\nExercise 9\n\n\nCode# Get the latitude and longitude coordinates of county boundaries\nlibrary(socviz)\ndata(county_map) \n\n# Check it out\nhead(county_map)\n\n     long      lat order  hole piece            group    id\n1 1225889 -1275020     1 FALSE     1 0500000US01001.1 01001\n2 1235324 -1274008     2 FALSE     1 0500000US01001.1 01001\n3 1244873 -1272331     3 FALSE     1 0500000US01001.1 01001\n4 1244129 -1267515     4 FALSE     1 0500000US01001.1 01001\n5 1272010 -1262889     5 FALSE     1 0500000US01001.1 01001\n6 1276797 -1295514     6 FALSE     1 0500000US01001.1 01001\n\n\n\nCode# Add 0's at the beginning of any fips_code that's fewer than 5 numbers long\n# Don't worry about the syntax\nelections_by_counties &lt;- elections_by_counties |&gt; \n  mutate(county_fips = as.character(county_fips)) |&gt; \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips))\n\n\n\nCodeggplot(elections_by_counties, aes(map_id = county_fips, fill = repub_20_categories)) +\n  geom_map(map = county_map) +\n  scale_fill_manual(values = rev(brewer.pal(10, \"RdBu\")), name = \"% Republican\") +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal()\n\n\n\n\n\n\n\n\n20 Exercise 10\n\nCodeggplot(elections_by_counties, aes(map_id = county_fips, fill = median_age)) +\n  geom_map(map = county_map) +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal()\n\n\n\n\n\n\n\n\nCodeggplot(elections_by_counties, aes(map_id = county_fips, fill = median_rent)) +\n  geom_map(map = county_map) +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-datawrangling.html",
    "href": "ica/ica-datawrangling.html",
    "title": "\n14  Load tidyverse & data\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodeelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n\n\nCode# Get a background map\nlibrary(socviz)\ndata(county_map)\n\n# Make a choropleth map\nlibrary(RColorBrewer)  # For the color scale\nlibrary(ggthemes) # For theme_map\nelections |&gt; \n  mutate(county_fips = as.character(county_fips)) |&gt; \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips)) |&gt; \n  ggplot(aes(map_id = county_fips, fill = cut(repub_pct_20, breaks = seq(0, 100, by = 10)))) +\n    geom_map(map = county_map) +\n    scale_fill_manual(values = rev(brewer.pal(10, \"RdBu\")), name = \"% Republican\") +\n    expand_limits(x = county_map$long, y = county_map$lat)  + \n    theme_map() +\n    theme(legend.position = \"right\") + \n    coord_equal()\n\n\n\n\n\n\n\n#Exercise 1\n\nCode# Define elections_small\nelections_small &lt;- elections |&gt;\n  select(state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16)\n\n# Check out the first 6 rows to confirm your code did what you think it did!\nhead(elections_small)\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16\n1          24661      23.96\n2          94090      19.57\n3          10390      46.66\n4           8748      21.42\n5          25384       8.47\n6           4701      75.09\n\n\n\nCode# With a pipe\nelections |&gt; \n  filter(state_name == \"Minnesota\")\n\n   state_name state_abbr historical              county_name county_fips\n1   Minnesota         MN       blue            Aitkin County       27001\n2   Minnesota         MN       blue             Anoka County       27003\n3   Minnesota         MN       blue            Becker County       27005\n4   Minnesota         MN       blue          Beltrami County       27007\n5   Minnesota         MN       blue            Benton County       27009\n6   Minnesota         MN       blue         Big Stone County       27011\n7   Minnesota         MN       blue        Blue Earth County       27013\n8   Minnesota         MN       blue             Brown County       27015\n9   Minnesota         MN       blue           Carlton County       27017\n10  Minnesota         MN       blue            Carver County       27019\n11  Minnesota         MN       blue              Cass County       27021\n12  Minnesota         MN       blue          Chippewa County       27023\n13  Minnesota         MN       blue           Chisago County       27025\n14  Minnesota         MN       blue              Clay County       27027\n15  Minnesota         MN       blue        Clearwater County       27029\n16  Minnesota         MN       blue              Cook County       27031\n17  Minnesota         MN       blue        Cottonwood County       27033\n18  Minnesota         MN       blue         Crow Wing County       27035\n19  Minnesota         MN       blue            Dakota County       27037\n20  Minnesota         MN       blue             Dodge County       27039\n21  Minnesota         MN       blue           Douglas County       27041\n22  Minnesota         MN       blue         Faribault County       27043\n23  Minnesota         MN       blue          Fillmore County       27045\n24  Minnesota         MN       blue          Freeborn County       27047\n25  Minnesota         MN       blue           Goodhue County       27049\n26  Minnesota         MN       blue             Grant County       27051\n27  Minnesota         MN       blue          Hennepin County       27053\n28  Minnesota         MN       blue           Houston County       27055\n29  Minnesota         MN       blue           Hubbard County       27057\n30  Minnesota         MN       blue            Isanti County       27059\n31  Minnesota         MN       blue            Itasca County       27061\n32  Minnesota         MN       blue           Jackson County       27063\n33  Minnesota         MN       blue           Kanabec County       27065\n34  Minnesota         MN       blue         Kandiyohi County       27067\n35  Minnesota         MN       blue           Kittson County       27069\n36  Minnesota         MN       blue       Koochiching County       27071\n37  Minnesota         MN       blue     Lac qui Parle County       27073\n38  Minnesota         MN       blue              Lake County       27075\n39  Minnesota         MN       blue Lake of the Woods County       27077\n40  Minnesota         MN       blue          Le Sueur County       27079\n41  Minnesota         MN       blue           Lincoln County       27081\n42  Minnesota         MN       blue              Lyon County       27083\n43  Minnesota         MN       blue            McLeod County       27085\n44  Minnesota         MN       blue          Mahnomen County       27087\n45  Minnesota         MN       blue          Marshall County       27089\n46  Minnesota         MN       blue            Martin County       27091\n47  Minnesota         MN       blue            Meeker County       27093\n48  Minnesota         MN       blue        Mille Lacs County       27095\n49  Minnesota         MN       blue          Morrison County       27097\n50  Minnesota         MN       blue             Mower County       27099\n51  Minnesota         MN       blue            Murray County       27101\n52  Minnesota         MN       blue          Nicollet County       27103\n53  Minnesota         MN       blue            Nobles County       27105\n54  Minnesota         MN       blue            Norman County       27107\n55  Minnesota         MN       blue           Olmsted County       27109\n56  Minnesota         MN       blue        Otter Tail County       27111\n57  Minnesota         MN       blue        Pennington County       27113\n58  Minnesota         MN       blue              Pine County       27115\n59  Minnesota         MN       blue         Pipestone County       27117\n60  Minnesota         MN       blue              Polk County       27119\n61  Minnesota         MN       blue              Pope County       27121\n62  Minnesota         MN       blue            Ramsey County       27123\n63  Minnesota         MN       blue          Red Lake County       27125\n64  Minnesota         MN       blue           Redwood County       27127\n65  Minnesota         MN       blue          Renville County       27129\n66  Minnesota         MN       blue              Rice County       27131\n67  Minnesota         MN       blue              Rock County       27133\n68  Minnesota         MN       blue            Roseau County       27135\n69  Minnesota         MN       blue         St. Louis County       27137\n70  Minnesota         MN       blue             Scott County       27139\n71  Minnesota         MN       blue         Sherburne County       27141\n72  Minnesota         MN       blue            Sibley County       27143\n73  Minnesota         MN       blue           Stearns County       27145\n74  Minnesota         MN       blue            Steele County       27147\n75  Minnesota         MN       blue           Stevens County       27149\n76  Minnesota         MN       blue             Swift County       27151\n77  Minnesota         MN       blue              Todd County       27153\n78  Minnesota         MN       blue          Traverse County       27155\n79  Minnesota         MN       blue           Wabasha County       27157\n80  Minnesota         MN       blue            Wadena County       27159\n81  Minnesota         MN       blue            Waseca County       27161\n82  Minnesota         MN       blue        Washington County       27163\n83  Minnesota         MN       blue          Watonwan County       27165\n84  Minnesota         MN       blue            Wilkin County       27167\n85  Minnesota         MN       blue            Winona County       27169\n86  Minnesota         MN       blue            Wright County       27171\n87  Minnesota         MN       blue   Yellow Medicine County       27173\n   total_votes_20 repub_pct_20 dem_pct_20 winner_20 total_votes_16 repub_pct_16\n1           10025        62.42      35.98     repub           9185        60.05\n2          211132        49.69      47.79     repub         184084        50.71\n3           19401        64.11      33.96     repub          17090        63.66\n4           24189        50.39      47.24     repub          21316        50.59\n5           22260        64.61      32.70     repub          19911        64.65\n6            2974        62.64      35.41     repub           2729        58.89\n7           36051        46.41      50.84       dem          33256        47.11\n8           14635        65.27      32.48     repub          13663        63.73\n9           20369        48.07      49.58       dem          18059        45.19\n10          66361        51.25      46.37     repub          55102        52.73\n11          18289        63.54      34.68     repub          15885        62.84\n12           6611        64.29      33.67     repub           6182        60.89\n13          34570        63.40      34.15     repub          30009        61.45\n14          32239        46.66      50.74       dem          29108        46.55\n15           4708        71.62      26.76     repub           4225        69.23\n16           3806        31.61      65.58       dem           3360        34.40\n17           6107        68.20      30.03     repub           5697        64.58\n18          40173        63.91      34.17     repub          35568        62.66\n19         262259        41.81      55.73       dem         228659        43.57\n20          12187        63.86      33.47     repub          10564        61.79\n21          24165        65.38      32.56     repub          21623        64.59\n22           7914        65.59      31.98     repub           7355        63.34\n23          12141        60.14      37.48     repub          10976        57.13\n24          16818        56.95      40.96     repub          15929        55.30\n25          28636        56.06      41.23     repub          25538        54.98\n26           3654        62.10      35.58     repub           3453        59.75\n27         755969        27.25      70.46       dem         672644        28.51\n28          11440        55.37      42.42     repub          10515        53.41\n29          12965        63.26      34.42     repub          11423        63.63\n30          24235        68.05      29.45     repub          20875        65.32\n31          26561        57.37      40.61     repub          23650        54.63\n32           5819        67.85      29.99     repub           5453        66.18\n33           9242        67.93      30.02     repub           8125        64.37\n34          23367        61.78      36.12     repub          21648        59.06\n35           2639        58.58      38.12     repub           2363        57.09\n36           6922        59.68      38.41     repub           6313        56.53\n37           4040        62.57      35.79     repub           3835        59.82\n38           7202        47.11      50.64       dem           6472        45.30\n39           2408        70.76      27.87     repub           2230        69.06\n40          16818        64.07      33.73     repub          14867        61.76\n41           3115        68.09      30.08     repub           3002        64.29\n42          12893        61.89      35.94     repub          12129        59.82\n43          20933        66.81      30.64     repub          18684        65.06\n44           2304        49.57      48.26     repub           2074        47.78\n45           5113        72.78      25.33     repub           4794        66.92\n46          11009        67.94      30.02     repub          10469        67.46\n47          13529        69.18      28.58     repub          12198        66.43\n48          14689        67.75      29.98     repub          12948        64.41\n49          19558        75.78      22.33     repub          17534        73.71\n50          19345        51.82      46.00     repub          17587        50.18\n51           4896        68.69      29.60     repub           4642        64.07\n52          19125        47.15      50.31       dem          17914        47.09\n53           8715        64.26      33.65     repub           8592        61.67\n54           3441        56.76      40.80     repub           3232        52.57\n55          91385        43.43      54.16       dem          79277        44.99\n56          36399        65.39      32.85     repub          32284        64.86\n57           7277        62.28      35.29     repub           6671        59.96\n58          16001        64.10      33.87     repub          13729        59.66\n59           4940        71.92      26.44     repub           4779        69.85\n60          15594        63.26      34.88     repub          14698        61.09\n61           7022        62.90      35.27     repub           6294        60.26\n62         295977        26.14      71.50       dem         269161        26.30\n63           2196        66.21      31.47     repub           1871        60.98\n64           8284        69.66      28.43     repub           7566        67.90\n65           8128        67.26      30.71     repub           7563        64.66\n66          35686        48.94      48.76     repub          32217        47.89\n67           5240        68.38      29.69     repub           4807        64.30\n68           8421        72.02      25.98     repub           7767        70.18\n69         119531        41.01      56.64       dem         111260        40.11\n70          87965        52.15      45.52     repub          74390        53.70\n71          55612        65.13      32.48     repub          47938        64.77\n72           8452        69.38      28.60     repub           7727        67.21\n73          84835        60.07      37.58     repub          78985        60.29\n74          21128        59.90      37.47     repub          19040        58.81\n75           5085        59.86      37.80     repub           5350        52.34\n76           5193        63.86      34.35     repub           4968        59.62\n77          13257        73.57      24.79     repub          11944        71.04\n78           1864        62.88      35.46     repub           1791        58.63\n79          13123        62.13      35.78     repub          11764        59.41\n80           7677        71.90      26.35     repub           6894        70.16\n81          10389        63.76      33.65     repub           9579        62.29\n82         166786        44.23      53.46       dem         142843        45.10\n83           5201        59.66      38.20     repub           4971        55.68\n84           3430        67.87      29.91     repub           3279        64.93\n85          27173        48.68      49.07       dem          25852        46.89\n86          82426        63.05      34.49     repub          69154        62.58\n87           5528        67.55      30.54     repub           5253        64.38\n   dem_pct_16 winner_16 total_votes_12 repub_pct_12 dem_pct_12 winner_12\n1       34.12     repub           9109        49.76      48.44     repub\n2       41.01     repub         185714        50.31      47.71     repub\n3       30.47     repub          16329        56.37      41.82     repub\n4       40.76     repub          21949        43.91      53.84       dem\n5       28.33     repub          19521        55.58      41.87     repub\n6       33.75     repub           2783        49.77      48.33     repub\n7       43.38     repub          34039        43.82      53.36       dem\n8       27.54     repub          13882        57.18      40.56     repub\n9       46.85       dem          18356        35.88      62.05       dem\n10      39.03     repub          52747        59.06      39.33     repub\n11      31.16     repub          16080        55.70      42.65     repub\n12      32.00     repub           6176        48.04      49.92       dem\n13      30.92     repub          29331        55.32      42.70     repub\n14      44.57     repub          28771        44.91      52.87       dem\n15      26.04     repub           4183        56.39      41.91     repub\n16      56.90       dem           3304        36.96      60.32       dem\n17      29.45     repub           5848        56.70      41.60     repub\n18      30.88     repub          34800        55.79      42.41     repub\n19      48.22       dem         230023        47.61      50.54       dem\n20      29.36     repub          10272        53.76      43.68     repub\n21      28.80     repub          20917        56.92      41.43     repub\n22      29.27     repub           7689        53.37      44.31     repub\n23      35.28     repub          10854        45.26      52.63       dem\n24      37.92     repub          16645        41.87      56.03       dem\n25      36.99     repub          25701        50.53      47.52     repub\n26      31.97     repub           3471        50.36      47.45     repub\n27      63.82       dem         677965        35.41      62.54       dem\n28      39.42     repub          10422        47.51      50.67       dem\n29      30.04     repub          11482        57.67      40.72     repub\n30      27.09     repub          20131        58.00      39.86     repub\n31      38.12     repub          23833        44.06      53.93       dem\n32      27.36     repub           5415        56.21      41.88     repub\n33      28.64     repub           8107        53.27      44.23     repub\n34      33.56     repub          21403        52.51      45.82     repub\n35      34.83     repub           2405        45.53      51.60       dem\n36      36.53     repub           6432        44.17      53.65       dem\n37      33.92     repub           3974        48.77      49.67       dem\n38      47.54       dem           6797        38.40      59.48       dem\n39      24.80     repub           2220        58.83      38.69     repub\n40      31.10     repub          14730        52.37      45.85     repub\n41      28.65     repub           3113        51.20      45.87     repub\n42      31.54     repub          12334        53.47      44.31     repub\n43      26.64     repub          18455        59.98      37.77     repub\n44      44.84     repub           2179        39.97      58.56       dem\n45      25.55     repub           4335        54.90      42.77     repub\n46      26.11     repub          10927        60.92      37.10     repub\n47      26.17     repub          12167        56.82      40.84     repub\n48      28.65     repub          13047        53.28      44.68     repub\n49      20.74     repub          16662        60.97      36.93     repub\n50      42.33     repub          18471        37.56      60.25       dem\n51      27.90     repub           4754        52.67      45.44     repub\n52      44.02     repub          18285        44.92      52.79       dem\n53      31.81     repub           8493        53.94      44.66     repub\n54      39.11     repub           3199        43.26      54.08       dem\n55      45.75       dem          77951        47.25      50.47       dem\n56      28.93     repub          31562        59.76      38.54     repub\n57      32.17     repub           6493        50.89      46.57     repub\n58      33.36     repub          13904        49.23      48.55     repub\n59      23.58     repub           4637        60.99      37.27     repub\n60      32.06     repub          14644        52.00      46.25     repub\n61      33.46     repub           6224        50.48      47.90     repub\n62      65.73       dem         277782        31.25      66.58       dem\n63      28.86     repub           1963        49.82      47.27     repub\n64      24.94     repub           7761        58.88      38.76     repub\n65      27.99     repub           7684        54.00      44.17     repub\n66      44.81     repub          32160        44.71      53.03       dem\n67      28.56     repub           4830        58.18      40.27     repub\n68      23.90     repub           7330        60.15      37.82     repub\n69      51.92       dem         116460        34.07      63.69       dem\n70      38.31     repub          71411        56.46      41.61     repub\n71      27.74     repub          46320        60.12      37.99     repub\n72      25.29     repub           7785        60.28      37.46     repub\n73      32.38     repub          78178        55.02      42.92     repub\n74      32.77     repub          19034        52.03      45.74     repub\n75      39.55     repub           5621        49.21      48.78     repub\n76      33.80     repub           5087        44.19      54.08       dem\n77      23.30     repub          11762        57.12      40.97     repub\n78      35.23     repub           1840        46.74      51.20       dem\n79      32.86     repub          11722        51.60      46.20     repub\n80      24.43     repub           6772        61.18      36.80     repub\n81      29.63     repub           9706        52.71      45.02     repub\n82      46.96       dem         141711        48.79      49.54       dem\n83      36.49     repub           5115        49.21      48.76     repub\n84      27.23     repub           3212        58.66      39.17     repub\n85      43.97     repub          27103        42.36      55.27       dem\n86      29.41     repub          69550        59.61      38.22     repub\n87      29.01     repub           5397        51.99      45.67     repub\n   total_population percent_white percent_black percent_asian percent_hispanic\n1             16032            95             0             0                1\n2            334027            85             4             4                4\n3             32800            87             0             0                1\n4             45021            74             1             1                2\n5             38756            93             2             1                2\n6              5209            98             0             0                1\n7             64504            91             3             2                3\n8             25643            95             0             0                3\n9             35398            89             1             1                1\n10            92770            90             1             3                4\n11            28485            85             0             0                1\n12            12272            91             1             1                5\n13            53691            94             1             1                2\n14            59638            90             1             1                4\n15             8725            86             0             0                1\n16             5195            87             1             1                1\n17            11658            89             1             3                5\n18            62742            96             1             0                1\n19           402306            82             5             4                6\n20            20159            93             1             0                5\n21            36264            97             0             0                1\n22            14430            93             0             1                6\n23            20870            98             0             0                1\n24            31129            88             1             1                9\n25            46259            93             1             0                3\n26             5990            97             0             0                2\n27          1170623            71            12             6                7\n28            18915            97             0             0                1\n29            20440            94             0             0                2\n30            38078            95             1             1                2\n31            45219            93             0             0                1\n32            10263            94             0             2                3\n33            16151            96             0             0                1\n34            42265            85             2             0               11\n35             4528            97             0             1                1\n36            13251            94             1             0                1\n37             7184            97             0             0                2\n38            10825            96             0             0                1\n39             3998            95             1             1                0\n40            27758            92             0             0                5\n41             5854            97             0             0                2\n42            25703            87             2             3                6\n43            36321            93             0             1                5\n44             5475            49             1             0                2\n45             9454            94             0             0                4\n46            20634            95             0             1                4\n47            23197            95             0             0                3\n48            25927            90             1             0                2\n49            33118            97             0             0                1\n50            39252            83             2             2               11\n51             8639            95             0             0                3\n52            32849            91             2             1                4\n53            21490            65             4             5               24\n54             6753            91             0             0                4\n55           146063            83             5             5                4\n56            57369            94             1             1                3\n57            14008            92             2             0                3\n58            29449            90             2             1                2\n59             9470            92             0             1                4\n60            31522            90             1             1                6\n61            10957            97             0             0                1\n62           515732            66            11            12                7\n63             4087            94             1             0                3\n64            15942            88             1             3                2\n65            15499            91             1             0                7\n66            64585            85             3             2                8\n67             9601            95             1             1                2\n68            15587            94             0             3                1\n69           200327            92             1             1                1\n70           132774            84             3             6                5\n71            89120            93             2             1                2\n72            15146            90             0             1                8\n73           151053            90             3             2                3\n74            36512            89             2             1                7\n75             9723            91             0             1                4\n76             9678            94             1             0                4\n77            24697            92             0             0                5\n78             3507            93             0             0                2\n79            21549            95             0             0                3\n80            13772            95             0             0                1\n81            19046            90             2             1                5\n82           241315            85             3             5                4\n83            11173            76             0             1               21\n84             6576            95             0             0                2\n85            51328            93             1             2                3\n86           126142            93             1             1                3\n87            10294            91             0             0                4\n   per_capita_income median_rent median_age\n1              24939         496       52.0\n2              30647         862       37.4\n3              25455         517       42.6\n4              21622         563       33.4\n5              24453         605       34.6\n6              26019         388       49.3\n7              25380         616       30.0\n8              26576         473       43.1\n9              24434         582       41.2\n10             37457         859       36.6\n11             25287         503       47.5\n12             25993         502       42.8\n13             27914         703       39.2\n14             24550         582       32.1\n15             22157         418       42.7\n16             32868         501       50.2\n17             23456         375       44.4\n18             26527         617       43.1\n19             34828         867       37.1\n20             29107         557       37.2\n21             27716         558       43.9\n22             25065         359       46.2\n23             25249         444       42.8\n24             25668         442       44.5\n25             29932         581       42.3\n26             26665         390       47.0\n27             37485         846       36.0\n28             26450         463       44.6\n29             24880         493       47.2\n30             25482         746       38.2\n31             24079         529       45.5\n32             27361         428       44.1\n33             22291         625       43.0\n34             26880         540       40.1\n35             26927         351       48.1\n36             26045         426       46.7\n37             28014         373       49.2\n38             27883         570       48.8\n39             21903         388       48.5\n40             27793         546       40.6\n41             26767         352       46.7\n42             26028         513       34.7\n43             26824         579       39.4\n44             19517         337       37.1\n45             26834         405       44.2\n46             26472         444       45.5\n47             25665         534       41.7\n48             22891         589       40.0\n49             23753         516       40.8\n50             24990         558       38.6\n51             27450         399       47.0\n52             26674         671       34.3\n53             22598         492       36.9\n54             23707         360       45.1\n55             34073         705       36.4\n56             26400         502       46.4\n57             24554         457       39.3\n58             21413         544       42.9\n59             24137         413       42.7\n60             25790         514       39.8\n61             29128         497       46.0\n62             29484         768       34.6\n63             23257         441       42.2\n64             25649         418       42.6\n65             26062         429       43.9\n66             25370         672       35.4\n67             24101         431       41.6\n68             25650         451       40.9\n69             25946         582       40.8\n70             35467         909       35.1\n71             28071         809       34.7\n72             25789         474       40.9\n73             26065         655       33.4\n74             27259         628       39.4\n75             28746         492       33.3\n76             25750         443       44.4\n77             22383         434       42.2\n78             28030         403       47.9\n79             28282         518       43.3\n80             20329         421       43.4\n81             25723         489       39.4\n82             36706         988       38.5\n83             25635         440       39.6\n84             25148         384       43.0\n85             23421         524       33.4\n86             29623         771       34.8\n87             25303         435       43.2\n\n\n#Exercise 2\n\nCode# Keep only data on counties in Hawaii\n elections_small |&gt;\n  filter(state_name == \"Hawaii\")\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1     Hawaii   Hawaii County          87814        30.63      66.88\n2     Hawaii Honolulu County         382114        35.66      62.51\n3     Hawaii    Kauai County          33497        34.58      63.36\n4     Hawaii     Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          64865      63.61\n2         285683      61.48\n3          26335      62.49\n4          51942      64.45\n\n\n\nCode# What does this do?\n elections_small |&gt; \n  filter(state_name %in% c(\"Hawaii\", \"Delaware\"))\n\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1   Delaware       Kent County          87025        47.12      51.19\n2   Delaware New Castle County         287633        30.72      67.81\n3   Delaware     Sussex County         129352        55.07      43.82\n4     Hawaii     Hawaii County          87814        30.63      66.88\n5     Hawaii   Honolulu County         382114        35.66      62.51\n6     Hawaii      Kauai County          33497        34.58      63.36\n7     Hawaii       Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          74253      44.91\n2         261468      62.30\n3         105814      37.17\n4          64865      63.61\n5         285683      61.48\n6          26335      62.49\n7          51942      64.45\n\n\n\nCode# Now try it. Change the order of filter and arrange below.\nelections_small |&gt; \n   filter(state_name == \"Wisconsin\",\n          repub_pct_20 &lt; dem_pct_20) |&gt; \n   arrange(desc(total_votes_20)) |&gt; \n   head()\n\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1  Wisconsin  Milwaukee County         458971        29.27      69.13\n2  Wisconsin       Dane County         344791        22.85      75.46\n3  Wisconsin       Rock County          85360        43.51      54.66\n4  Wisconsin  La Crosse County          67884        42.25      55.75\n5  Wisconsin Eau Claire County          58275        43.49      54.26\n6  Wisconsin    Portage County          40603        47.53      50.31\n  total_votes_16 dem_pct_16\n1         434970      66.44\n2         304729      71.38\n3          75043      52.42\n4          62785      51.61\n5          54080      50.43\n6          38123      48.59\n\n\n\nCodeelections_small |&gt; \n   filter(state_name == \"Delaware\") |&gt; \n   mutate(repub_win_20 = repub_pct_20 &gt; dem_pct_20) |&gt; \n   select(county_name, repub_pct_20, dem_pct_20, repub_win_20)\n\n        county_name repub_pct_20 dem_pct_20 repub_win_20\n1       Kent County        47.12      51.19        FALSE\n2 New Castle County        30.72      67.81        FALSE\n3     Sussex County        55.07      43.82         TRUE\n\n\n\nCode# What did this code do?\nelections_small |&gt; \n   mutate(diff_20 = repub_pct_20 - dem_pct_20) |&gt; \n   head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 diff_20\n1          24661      23.96   44.42\n2          94090      19.57   53.76\n3          10390      46.66    7.66\n4           8748      21.42   57.73\n5          25384       8.47   80.00\n6           4701      75.09  -49.86",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Load tidyverse & data</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html",
    "href": "ica/ica-dates.html",
    "title": "\n15  Get today’s date\n",
    "section": "",
    "text": "Code#as.Date(today())\n\n\n\nCode# Let's store this as \"today\" so we can work with it below\n#oday &lt;- as.Date(today())\n\n# Check out the class of this object\n#class(today)",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Get today's date</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html",
    "href": "ica/ica-reshaping.html",
    "title": "\n16  A tibble: 3 × 3\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodepenguins &lt;- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-28/penguins.csv')\n\nRows: 344 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (5): bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nCodepenguin_avg &lt;- penguins |&gt; \n  group_by(species, sex) |&gt; \n  summarize(avg_body_mass = mean(body_mass_g, na.rm = TRUE)) |&gt; \n  na.omit()\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n\nCodepenguin_avg |&gt; \npivot_wider(names_from = sex, values_from = avg_body_mass)\n\n# Groups:   species [3]\n  species   female  male\n  &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Adelie     3369. 4043.\n2 Chinstrap  3527. 3939.\n3 Gentoo     4680. 5485.\n\n\n\nCodefood &lt;- data.frame(\n  customer = rep(c(\"A\", \"B\"), each = 3),\n  restaurant = rep(c(\"Shish\", \"FrenchMeadow\", \"DunnBros\"), 2),\n  order = c(\"falafel\", \"salad\", \"coffee\", \"baklava\", \"pastry\", \"tea\")\n)\nfood\n\n  customer   restaurant   order\n1        A        Shish falafel\n2        A FrenchMeadow   salad\n3        A     DunnBros  coffee\n4        B        Shish baklava\n5        B FrenchMeadow  pastry\n6        B     DunnBros     tea\n\n\n#Exercise 1\n\nCodesleep_wide &lt;- read.csv(\"https://mac-stat.github.io/data/sleep_wide.csv\")\n\nhead(sleep_wide)\n\n  Subject  day_0  day_1  day_2  day_3  day_4  day_5  day_6  day_7  day_8  day_9\n1     308 249.56 258.70 250.80 321.44 356.85 414.69 382.20 290.15 430.59 466.35\n2     309 222.73 205.27 202.98 204.71 207.72 215.96 213.63 217.73 224.30 237.31\n3     310 199.05 194.33 234.32 232.84 229.31 220.46 235.42 255.75 261.01 247.52\n4     330 321.54 300.40 283.86 285.13 285.80 297.59 280.24 318.26 305.35 354.05\n5     331 287.61 285.00 301.82 320.12 316.28 293.32 290.08 334.82 293.75 371.58\n6     332 234.86 242.81 272.96 309.77 317.46 310.00 454.16 346.83 330.30 253.86\n\n\n\nCodesleep_long &lt;- sleep_wide |&gt;\n  pivot_longer(cols = -Subject,\n               names_to = \"day\",\n               names_prefix = \"day_\",\n               values_to = \"reaction_time\")\n\nhead(sleep_long)\n\n# A tibble: 6 × 3\n  Subject day   reaction_time\n    &lt;int&gt; &lt;chr&gt;         &lt;dbl&gt;\n1     308 0              250.\n2     308 1              259.\n3     308 2              251.\n4     308 3              321.\n5     308 4              357.\n6     308 5              415.\n\n\n\nCode ggplot(sleep_long, aes(x = day, y = reaction_time, color = Subject)) +\n  geom_line()\n\n\n\n\n\n\n\n\n17 Exercise 5\n\nCode# Load data\nlibrary(tidyr)\ndata(\"billboard\")\n\n# Check it out\nhead(billboard)\n\n# A tibble: 6 × 79\n  artist      track date.entered   wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8\n  &lt;chr&gt;       &lt;chr&gt; &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 2 Pac       Baby… 2000-02-26      87    82    72    77    87    94    99    NA\n2 2Ge+her     The … 2000-09-02      91    87    92    NA    NA    NA    NA    NA\n3 3 Doors Do… Kryp… 2000-04-08      81    70    68    67    66    57    54    53\n4 3 Doors Do… Loser 2000-10-21      76    76    72    69    67    65    55    59\n5 504 Boyz    Wobb… 2000-04-15      57    34    25    17    17    31    36    49\n6 98^0        Give… 2000-08-19      51    39    34    26    26    19     2     2\n# ℹ 68 more variables: wk9 &lt;dbl&gt;, wk10 &lt;dbl&gt;, wk11 &lt;dbl&gt;, wk12 &lt;dbl&gt;,\n#   wk13 &lt;dbl&gt;, wk14 &lt;dbl&gt;, wk15 &lt;dbl&gt;, wk16 &lt;dbl&gt;, wk17 &lt;dbl&gt;, wk18 &lt;dbl&gt;,\n#   wk19 &lt;dbl&gt;, wk20 &lt;dbl&gt;, wk21 &lt;dbl&gt;, wk22 &lt;dbl&gt;, wk23 &lt;dbl&gt;, wk24 &lt;dbl&gt;,\n#   wk25 &lt;dbl&gt;, wk26 &lt;dbl&gt;, wk27 &lt;dbl&gt;, wk28 &lt;dbl&gt;, wk29 &lt;dbl&gt;, wk30 &lt;dbl&gt;,\n#   wk31 &lt;dbl&gt;, wk32 &lt;dbl&gt;, wk33 &lt;dbl&gt;, wk34 &lt;dbl&gt;, wk35 &lt;dbl&gt;, wk36 &lt;dbl&gt;,\n#   wk37 &lt;dbl&gt;, wk38 &lt;dbl&gt;, wk39 &lt;dbl&gt;, wk40 &lt;dbl&gt;, wk41 &lt;dbl&gt;, wk42 &lt;dbl&gt;,\n#   wk43 &lt;dbl&gt;, wk44 &lt;dbl&gt;, wk45 &lt;dbl&gt;, wk46 &lt;dbl&gt;, wk47 &lt;dbl&gt;, wk48 &lt;dbl&gt;, …",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Exercise 5</span>"
    ]
  },
  {
    "objectID": "ica/ica-joining.html",
    "href": "ica/ica-joining.html",
    "title": "\n17  Check it out\n",
    "section": "",
    "text": "Codestudents_1 &lt;- data.frame(\n  student = c(\"A\", \"B\", \"C\"),\n  class = c(\"STAT 101\", \"GEOL 101\", \"ANTH 101\")\n)\n\nstudents_1\n\n  student    class\n1       A STAT 101\n2       B GEOL 101\n3       C ANTH 101\n\n\n\nCodeenrollments_1 &lt;- data.frame(\n  class = c(\"STAT 101\", \"ART 101\", \"GEOL 101\"),\n  enrollment = c(18, 17, 24)\n)\n\n# Check it out\nenrollments_1\n\n     class enrollment\n1 STAT 101         18\n2  ART 101         17\n3 GEOL 101         24\n\n\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodestudents_1 |&gt; \n  left_join(enrollments_1)\n\nJoining with `by = join_by(class)`\n\n\n  student    class enrollment\n1       A STAT 101         18\n2       B GEOL 101         24\n3       C ANTH 101         NA\n\n\n\nCodestudents_1 |&gt; \n  inner_join(enrollments_1)\n\nJoining with `by = join_by(class)`\n\n\n  student    class enrollment\n1       A STAT 101         18\n2       B GEOL 101         24\n\n\n\nCodestudents_2 &lt;- data.frame(\n  student = c(\"D\", \"E\", \"F\"),\n  class = c(\"COMP 101\", \"BIOL 101\", \"POLI 101\")\n)\n\n# Check it out\nstudents_2\n\n  student    class\n1       D COMP 101\n2       E BIOL 101\n3       F POLI 101\n\n\n\nCodeenrollments_2 &lt;- data.frame(\n  course = c(\"ART 101\", \"BIOL 101\", \"COMP 101\"),\n  enrollment = c(18, 20, 19)\n)\n\n# Check it out\nenrollments_2\n\n    course enrollment\n1  ART 101         18\n2 BIOL 101         20\n3 COMP 101         19\n\n\n\nCode# eval = FALSE: don't evaluate this chunk when knitting. it produces an error.\n#students_2 |&gt; \n#  left_join(enrollments_2)\n\n\n\nCode#students_2 |&gt; \n#  left_join(enrollments_2, join_by(class == course))\n\n\n\nCode# Add student grades in each course\nstudents_3 &lt;- data.frame(\n  student = c(\"Y\", \"Y\", \"Z\", \"Z\"),\n  class = c(\"COMP 101\", \"BIOL 101\", \"POLI 101\", \"COMP 101\"),\n  grade = c(\"B\", \"S\", \"C\", \"A\")\n)\n\n# Check it out\nstudents_3\n\n  student    class grade\n1       Y COMP 101     B\n2       Y BIOL 101     S\n3       Z POLI 101     C\n4       Z COMP 101     A\n\n\n\nCode# Add average grades in each course\nenrollments_3 &lt;- data.frame(\n  class = c(\"ART 101\", \"BIOL 101\",\"COMP 101\"),\n  grade = c(\"B\", \"A\", \"A-\"),\n  enrollment = c(20, 18, 19)\n)\n\n# Check it out\nenrollments_3\n\n     class grade enrollment\n1  ART 101     B         20\n2 BIOL 101     A         18\n3 COMP 101    A-         19\n\n\n\nCode# People who have voted\nvoters &lt;- data.frame(\n  id = c(\"A\", \"D\", \"E\", \"F\", \"G\"),\n  times_voted = c(2, 4, 17, 6, 20)\n)\n\nvoters\n\n  id times_voted\n1  A           2\n2  D           4\n3  E          17\n4  F           6\n5  G          20\n\n\n\nCode# Contact info for voting age adults\ncontact &lt;- data.frame(\n  name = c(\"A\", \"B\", \"C\", \"D\"),\n  address = c(\"summit\", \"grand\", \"snelling\", \"fairview\"),\n  age = c(24, 89, 43, 38)\n)\n\ncontact\n\n  name  address age\n1    A   summit  24\n2    B    grand  89\n3    C snelling  43\n4    D fairview  38\n\n\n\nCodevoters |&gt;\n  left_join(contact, join_by(id==name))\n\n  id times_voted  address age\n1  A           2   summit  24\n2  D           4 fairview  38\n3  E          17     &lt;NA&gt;  NA\n4  F           6     &lt;NA&gt;  NA\n5  G          20     &lt;NA&gt;  NA\n\n\n\nCodecontact |&gt;\n  left_join(voters, join_by(name==id))\n\n  name  address age times_voted\n1    A   summit  24           2\n2    B    grand  89          NA\n3    C snelling  43          NA\n4    D fairview  38           4\n\n\n\nCodevoters |&gt;\n  full_join(contact, join_by(id==name))\n\n  id times_voted  address age\n1  A           2   summit  24\n2  D           4 fairview  38\n3  E          17     &lt;NA&gt;  NA\n4  F           6     &lt;NA&gt;  NA\n5  G          20     &lt;NA&gt;  NA\n6  B          NA    grand  89\n7  C          NA snelling  43",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Check it out</span>"
    ]
  },
  {
    "objectID": "ica/ica-factors.html",
    "href": "ica/ica-factors.html",
    "title": "\n18  Check it out\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodeelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\") |&gt; \n  select(state_abbr, historical, county_name, total_votes_20, repub_pct_20, dem_pct_20) |&gt; \n  mutate(dem_support_20 = case_when(\n    (repub_pct_20 - dem_pct_20 &gt;= 5) ~ \"low\",\n    (repub_pct_20 - dem_pct_20 &lt;= -5) ~ \"high\",\n    .default = \"medium\"\n  ))\n\nhead(elections)  \n\n  state_abbr historical    county_name total_votes_20 repub_pct_20 dem_pct_20\n1         AL        red Autauga County          27770        71.44      27.02\n2         AL        red Baldwin County         109679        76.17      22.41\n3         AL        red Barbour County          10518        53.45      45.79\n4         AL        red    Bibb County           9595        78.43      20.70\n5         AL        red  Blount County          27588        89.57       9.57\n6         AL        red Bullock County           4613        24.84      74.70\n  dem_support_20\n1            low\n2            low\n3            low\n4            low\n5            low\n6           high\n\n\n\nCodeggplot(elections, aes(x = dem_support_20)) + \n  geom_bar()\n\n\n\n\n\n\nCodeelections |&gt; \n  count(dem_support_20)\n\n  dem_support_20    n\n1           high  458\n2            low 2494\n3         medium  157\n\n\n\nCodelibrary(ggridges)\nelections |&gt; \n  ggplot(aes(x = repub_pct_20, y = state_abbr, fill = historical)) + \n    geom_density_ridges() + \n    scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\nPicking joint bandwidth of 4.43\n\n\n\n\n\n\n\n\n\nCode# Since we might want states to be alphabetical in other parts of our analysis,\n# we'll pipe the data into the ggplot without storing it:\nelections |&gt; \n  mutate(state_abbr = fct_reorder(state_abbr, repub_pct_20, .fun = \"median\")) |&gt; \n  ggplot(aes(x = repub_pct_20, y = state_abbr, fill = historical)) + \n    geom_density_ridges() + \n    scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\nPicking joint bandwidth of 4.43\n\n\n\n\n\n\n\n\nExercises\n\nCode# Get rid of some duplicate rows!\ngrades &lt;- read.csv(\"https://mac-stat.github.io/data/grades.csv\") |&gt; \n  distinct(sid, sessionID, .keep_all = TRUE)\n\n# Check it out\nhead(grades)\n\n     sid grade   sessionID\n1 S31185    D+ session1784\n2 S31185    B+ session1785\n3 S31185    A- session1791\n4 S31185    B+ session1792\n5 S31185    B- session1794\n6 S31185    C+ session1795\n\n\n\nCodegrade_distribution &lt;- grades |&gt; \n  count(grade)\n\nhead(grade_distribution)\n\n  grade    n\n1     A 1506\n2    A- 1381\n3    AU   27\n4     B  804\n5    B+ 1003\n6    B-  330\n\n\n\nCodegrade_distribution |&gt; \n  ggplot(aes(x = grade, y = n)) +\n    geom_col()\n\n\n\n\n\n\n\n\nCodegrade_distribution |&gt;\n  mutate(grade = fct_reorder(grade, n, .desc = TRUE)) |&gt;\n  ggplot(aes(x = grade, y = n)) +\n    geom_col()\n\n\n\n\n\n\n\n\nCodegrade_distribution |&gt;\n  mutate(grade = fct_relevel(grade, c(\"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"NC\", \"S\", \"AU\"))) |&gt;\n  mutate(grade = fct_recode(grade, \"Satisfactory\" = \"S\", \"Audit\" = \"AU\")) |&gt;  # Multiple pieces go into the last 2 blanks\n  ggplot(aes(x = grade, y = n)) +\n    geom_col()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Check it out</span>"
    ]
  },
  {
    "objectID": "ica/ica-strings.html",
    "href": "ica/ica-strings.html",
    "title": "\n19  How can we do this after mutating?\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodeclasses &lt;- data.frame(\n  sem        = c(\"SP2023\", \"FA2023\", \"SP2024\"),\n  area       = c(\"History\", \"Math\", \"Anthro\"),\n  enroll     = c(\"30 - people\", \"20 - people\", \"25 - people\"),\n  instructor = c(\"Ernesto Capello\", \"Lori Ziegelmeier\", \"Arjun Guneratne\")\n)\n\nclasses\n\n     sem    area      enroll       instructor\n1 SP2023 History 30 - people  Ernesto Capello\n2 FA2023    Math 20 - people Lori Ziegelmeier\n3 SP2024  Anthro 25 - people  Arjun Guneratne\n\n\n\nCodeclasses |&gt; \n  mutate(spring = str_detect(sem, \"SP\"))\n\n     sem    area      enroll       instructor spring\n1 SP2023 History 30 - people  Ernesto Capello   TRUE\n2 FA2023    Math 20 - people Lori Ziegelmeier  FALSE\n3 SP2024  Anthro 25 - people  Arjun Guneratne   TRUE\n\nCode# We don't have to mutate first!\nclasses |&gt; \n  filter(str_detect(sem, \"SP\"))\n\n     sem    area      enroll      instructor\n1 SP2023 History 30 - people Ernesto Capello\n2 SP2024  Anthro 25 - people Arjun Guneratne\n\nCode# Yet another way\nclasses |&gt; \n  filter(!str_detect(sem, \"FA\"))\n\n     sem    area      enroll      instructor\n1 SP2023 History 30 - people Ernesto Capello\n2 SP2024  Anthro 25 - people Arjun Guneratne\n\n\nExercises\n\nCodecourses &lt;- read.csv(\"https://mac-stat.github.io/data/registrar.csv\")\n\n# Check it out\nhead(courses)\n\n       number   crn                                                name  days\n1 AMST 112-01 10318         Introduction to African American Literature M W F\n2 AMST 194-01 10073              Introduction to Asian American Studies M W F\n3 AMST 194-F1 10072 What’s After White Empire - And Is It Already Here?  T R \n4 AMST 203-01 10646 Politics and Inequality: The American Welfare State M W F\n5 AMST 205-01 10842                         Trans Theories and Politics  T R \n6 AMST 209-01 10474                   Civil Rights in the United States   W  \n             time      room             instructor avail_max\n1 9:40 - 10:40 am  MAIN 009       Daylanne English    3 / 20\n2  1:10 - 2:10 pm MUSIC 219          Jake Nagasawa   -4 / 16\n3  3:00 - 4:30 pm   HUM 214 Karin Aguilar-San Juan    0 / 14\n4 9:40 - 10:40 am  CARN 305          Lesley Lavery    3 / 25\n5  3:00 - 4:30 pm  MAIN 009              Myrl Beam   -2 / 20\n6 7:00 - 10:00 pm  MAIN 010         Walter Greason   -1 / 15\n\n\n\nCode# Change the areas to \"history\", \"math\", \"anthro\"\nclasses |&gt; \n  mutate(area = str_to_lower(area))\n\n     sem    area      enroll       instructor\n1 SP2023 history 30 - people  Ernesto Capello\n2 FA2023    math 20 - people Lori Ziegelmeier\n3 SP2024  anthro 25 - people  Arjun Guneratne\n\n\n\nCode# Create a variable that id's which courses were taught in spring \nclasses |&gt; \n  mutate(spring = str_detect(sem, \"SP\"))\n\n     sem    area      enroll       instructor spring\n1 SP2023 History 30 - people  Ernesto Capello   TRUE\n2 FA2023    Math 20 - people Lori Ziegelmeier  FALSE\n3 SP2024  Anthro 25 - people  Arjun Guneratne   TRUE\n\n\n\nCode# Construct a table that indicates the number of classes offered in each day/time slot\n# Print only the 6 most popular time slots\ncourses |&gt; \n  count(days, time) |&gt; \n  arrange(desc(n)) |&gt; \n  head()\n\n   days             time  n\n1 M W F 10:50 - 11:50 am 76\n2  T R   9:40 - 11:10 am 71\n3 M W F  9:40 - 10:40 am 68\n4 M W F   1:10 - 2:10 pm 66\n5  T R    3:00 - 4:30 pm 62\n6  T R    1:20 - 2:50 pm 59\n\n\n\nCodecourses_clean &lt;- courses |&gt; \n  separate(avail_max, c(\"avail\", \"max\"), sep = \" / \") |&gt; \n  mutate(enroll = as.numeric(max) - as.numeric(avail)) |&gt; \n  separate(number, c(\"dept\", \"number\", \"section\"))\n  \nhead(courses_clean)\n\n  dept number section   crn                                                name\n1 AMST    112      01 10318         Introduction to African American Literature\n2 AMST    194      01 10073              Introduction to Asian American Studies\n3 AMST    194      F1 10072 What’s After White Empire - And Is It Already Here?\n4 AMST    203      01 10646 Politics and Inequality: The American Welfare State\n5 AMST    205      01 10842                         Trans Theories and Politics\n6 AMST    209      01 10474                   Civil Rights in the United States\n   days            time      room             instructor avail max enroll\n1 M W F 9:40 - 10:40 am  MAIN 009       Daylanne English     3  20     17\n2 M W F  1:10 - 2:10 pm MUSIC 219          Jake Nagasawa    -4  16     20\n3  T R   3:00 - 4:30 pm   HUM 214 Karin Aguilar-San Juan     0  14     14\n4 M W F 9:40 - 10:40 am  CARN 305          Lesley Lavery     3  25     22\n5  T R   3:00 - 4:30 pm  MAIN 009              Myrl Beam    -2  20     22\n6   W   7:00 - 10:00 pm  MAIN 010         Walter Greason    -1  15     16\n\n\n\nCode# Identify the 6 departments that offered the most sections\ncourses_clean |&gt; \n  count(dept) |&gt; \n  arrange(desc(n)) |&gt; \n  head()\n\n  dept  n\n1 SPAN 45\n2 BIOL 44\n3 ENVI 38\n4 PSYC 37\n5 CHEM 33\n6 COMP 31\n\n\n\nCodecourses_clean |&gt; \n  filter(str_detect(instructor, \"Alicia Johnson\")) \n\n  dept number section   crn                         name  days            time\n1 STAT    253      01 10806 Statistical Machine Learning  T R  9:40 - 11:10 am\n2 STAT    253      02 10807 Statistical Machine Learning  T R   1:20 - 2:50 pm\n3 STAT    253      03 10808 Statistical Machine Learning  T R   3:00 - 4:30 pm\n        room     instructor avail max enroll\n1 THEATR 206 Alicia Johnson    -3  20     23\n2 THEATR 206 Alicia Johnson    -3  20     23\n3 THEATR 206 Alicia Johnson     2  20     18\n\n\n\nCodestat &lt;- courses_clean |&gt; \n  filter(dept == \"STAT\") |&gt; \n  mutate(name = str_replace(name, \"Introduction to \", \"\")) |&gt;\n  mutate(name = str_replace(name, \"Statistical\", \"Stat\")) |&gt; \n  mutate(start_time = str_sub(time, 1, 5)) |&gt; \n  select(number, name, start_time, enroll)\n\nstat\n\n   number                      name start_time enroll\n1     112              Data Science      3:00      27\n2     112              Data Science      9:40      21\n3     112              Data Science      1:20      25\n4     125              Epidemiology      12:00     26\n5     155             Stat Modeling      1:10      32\n6     155             Stat Modeling      9:40      24\n7     155             Stat Modeling      10:50     26\n8     155             Stat Modeling      3:30      25\n9     155             Stat Modeling      1:20      30\n10    155             Stat Modeling      3:00      27\n11    212 Intermediate Data Science      9:40      11\n12    212 Intermediate Data Science      1:20      11\n13    253     Stat Machine Learning      9:40      23\n14    253     Stat Machine Learning      1:20      23\n15    253     Stat Machine Learning      3:00      18\n16    354               Probability      3:00      22\n17    452           Correlated Data      9:40       7\n18    452           Correlated Data      1:20       8\n19    456  Projects in Data Science      9:40      11\n\n\n\nCodeenrollments &lt;- courses_clean |&gt; \n  filter(dept != \"PE\", dept != \"INTD\") |&gt; \n  filter(!(dept == \"MUSI\" & as.numeric(number) &lt; 100)) |&gt; \n  filter(!(dept == \"THDA\" & as.numeric(number) &lt; 100)) |&gt; \n  filter(!str_detect(section, \"L\"))\n  \nhead(enrollments)\n\n  dept number section   crn                                                name\n1 AMST    112      01 10318         Introduction to African American Literature\n2 AMST    194      01 10073              Introduction to Asian American Studies\n3 AMST    194      F1 10072 What’s After White Empire - And Is It Already Here?\n4 AMST    203      01 10646 Politics and Inequality: The American Welfare State\n5 AMST    205      01 10842                         Trans Theories and Politics\n6 AMST    209      01 10474                   Civil Rights in the United States\n   days            time      room             instructor avail max enroll\n1 M W F 9:40 - 10:40 am  MAIN 009       Daylanne English     3  20     17\n2 M W F  1:10 - 2:10 pm MUSIC 219          Jake Nagasawa    -4  16     20\n3  T R   3:00 - 4:30 pm   HUM 214 Karin Aguilar-San Juan     0  14     14\n4 M W F 9:40 - 10:40 am  CARN 305          Lesley Lavery     3  25     22\n5  T R   3:00 - 4:30 pm  MAIN 009              Myrl Beam    -2  20     22\n6   W   7:00 - 10:00 pm  MAIN 010         Walter Greason    -1  15     16",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>How can we do this after mutating?</span>"
    ]
  },
  {
    "objectID": "summary/Vizualization.html",
    "href": "summary/Vizualization.html",
    "title": "",
    "section": "",
    "text": "Summary20  Vizualization.html Code\n\n\n\n\nBackground Tidy data = has 1 piece of information per cell • 1 cell = 1 data point • 1 column = 1 variable • Numerical • Row = Unit of observation, e.g., species • Each column = measure or a variable (quantitative or categorical) Data Science Workflow 1. Data Collection 2. Preparation 3. Visualization 4. Analysis 5. Storytelling Benefits of Visualization: • Understand working with + scales & typical outcomes, outliers • Unusual cases, patterns & relationships • Refine & measure questions → inform analysis • Communicate findings & tell a story Components of Graphics: (used in ggplot – “grammar of graphics”) • Frame/coordinate system → define axis • 1 layer = represents data point • scales → aesthetic choices or written information • facets → splitting data into subplots • theme → other aesthetic choices Bivariate Viz: • Bar charts → good for categorical | geom_bar • Histogram → good for ranges of quantitative w/ many outcomes | geom_histogram Variables • Response variable: variable wanting to be explained • Predictors: variables that might explain variables Building Bivariate: • → each quantitative variable needs new axis • → each categorical need a new way to be “grouped” Multi Variable Viz: Steps: • Setting up frame → ggplot() • Add layers / geom elements → geom_bar() • Facets → splitting into groups • Change theme + color of aesthetic & change scales & color (fill, shape, size) w/ new variables Options: • geom_point() • geom_point() + • geom_line() • geom_smooth ⸻ 1 categorical + bar + 1 → stacked/dodged + facet 1 numerical → histogram, density, box, violin + 1 categorical → facet 1 categorical + 1 numerical → scatter/line ⸻ Spatial Viz: Types: • Point maps → locations of observations • Contour maps → density or distribution of observations • Choropleth maps → outcomes in regions ⸻ Effective Viz: • Ineffective Viz → is wrong, unclear, ugly • Effective Viz → has meaningful axis, alt text, color/blind palette, ease of comparison, maybe caption & title",
    "crumbs": [
      "Summary",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Vizualization.html</span>"
    ]
  },
  {
    "objectID": "summary/Wrangling.html",
    "href": "summary/Wrangling.html",
    "title": "",
    "section": "",
    "text": "Summary21  Wrangling.html Code\n\n\n\n\nWrangling Purpose keep only certain observations Define new variables Reformat existing variables combine datasets Verbs Arrange- arrange rows according to a column Ex- ascending or descending order (desc) Filter - select or remove rows Ex- filter(data, column name == “value”) Select - select columns Ex- select(dataset, c(column name)) Mutate - create columns Summarize- calculate something from a column Sum, median ect Group-by - group rows by a column Symbols == equal to != not equal %in% c multiple values &gt;, &lt;, &gt;=, &lt;= grater than etc Dates Labeling numerical dates with as.Date label = true For dayes of week, month names, ect Also with NA values Ex is.na = true of na.omit Reshaping Pivote longer - colapes column to make longer Pivot longer ( cols = c(), names_to =- , values_to = ) Pivot wider - expands 1 column to 2 making wider Pivot wider( names_from, values _from, ) Joininging Combining two data sets through a common factor. left_join()- Keeps all observations from the left, but discards any observations in the right that do not have a match in the left. inner_join()- Keeps only the observations from the left with a match in the right. full_join()- Keeps all observations from the left and the right. semi_join()- Discards any observations in the left table that do not have a match in the right table. If there are multiple matches of right cases to a left case, it keeps just one copy of the left case. anti_join()- Discards any observations in the left table that do have a match in the right table.\nFactors Reorganizes data when presented into a more meaningful format fct_relevel() - based on levels Fct_recode- changes labels once sorted Better when using Joy plot or ridge plots For reordering fct_relevel() = manually reorder levels fct_reorder() = reorder levels according to values of another variable fct_infreq() = order levels from highest to lowest frequency fct_rev() = reverse the current order Fro labling fct_recode() = manually change levels fct_lump() = group together least common levels Strings Most common functions str_replace(x, pattern, replacement) -finds the first part of x that matches the pattern and replaces it with replacement str_replace_all(x, pattern, replacement)- finds all instances in x that matches the pattern and replaces it with replacement str_to_lower(x) -converts all upper case letters in x to lower case str_sub(x, start, end) -only keeps a subset of characters in x, from start (a number indexing the first letter to keep) to end (a number indexing the last letter to keep) str_length(x) -records the number of characters in x str_detect(x, pattern) -is TRUE if x contains the given pattern and FALSE otherwise",
    "crumbs": [
      "Summary",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Wrangling.html</span>"
    ]
  }
]