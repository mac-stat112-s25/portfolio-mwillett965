---
title: "Bivariate Viz"
---

Use this file for practice with the **bivariate viz** in-class activity.  Refer to the class website for details.
```{r}
# Load the package
library(tidyverse)
```

```{r}
# Import data
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")

# How many students have now filled out the survey? 49
dim(survey)

# What type of variables do we have? catagorical?

```

```{r}
# Load data
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")
View(elections)
# Check it out
head(elections)
```

```{r}
ggplot(elections, aes(x = winner)) +
      geom_bar()
```

# Exercise 2

```{r}
# Set up the plotting frame
# How does this differ than the frame for our histogram of repub_pct_20 alone?
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))
```

```{r}
# Add a layer of points for each county
# Take note of the geom!
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point()
```

```{r}
# Change the shape of the points
# What happens if you change the shape to another number?- differnt shapes
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point(shape = 5)
```

```{r}
# YOU TRY: Modify the code to make the points "orange"
# NOTE: Try to anticipate if "color" or "fill" will be useful here. Then try both.- fill did not work- color made points blue
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point(color="blue")
```

```{r}
# Add a layer that represents each county by the state it's in
# Take note of the geom and the info it needs to run!
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_text(aes(label = state_abbr))
```

# Exercise 4

```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point() +
  geom_smooth()
```

```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +

  geom_smooth()
```

```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point() +
  geom_smooth(method = "lm")
```
# Exercise 5


```{r}
# Scatterplot of repub_pct_20 vs median_rent
ggplot(elections, aes(y = repub_pct_20, x = median_rent)) +
  geom_point()


# Scatterplot of repub_pct_20 vs median_age

ggplot(elections, aes(y = repub_pct_20, x = median_age)) +
  geom_point()
```
# Exercise 6

```{r}
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_point()
```

# Exercise 7

```{r}
# Side-by-side violin plots
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_violin()
```
```{r}
# Side-by-side boxplots (defined below)
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_boxplot()
```

# Exercise 8
```{r}
ggplot(elections, aes(x = repub_pct_20)) +
  geom_density()
```

# Exercise 9

```{r}
# Name two "bad" things about this plot- the colrs are wrong, and is confusing to read
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density()
```

```{r}
# What does scale_fill_manual do?- manuely picks the colors
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red"))
```

```{r}
# What does alpha = 0.5 do?- changes color opasity
# Play around with different values of alpha, between 0 and 1
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density(alpha = 0.2) +
  scale_fill_manual(values = c("blue", "purple", "red"))
```

```{r}
# What does facet_wrap do?!- seperates the graphs
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red")) +
  facet_wrap(~ historical)
```

```{r}
# Let's try a similar grouping strategy with a histogram instead of density plot.
# Why is this terrible?- It is hard to read and look at and dosent mach the oters or the data
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_histogram(color = "white") +
  scale_fill_manual(values = c("blue", "purple", "red"))
```

# Exercise 11

```{r}
# Plot 1: adjust this to recreate the top plot
ggplot(elections, aes(x = historical)) +
  geom_bar()
```

```{r}
# Plot 2: adjust this to recreate the bottom plot
ggplot(elections, aes(x = winner_20)) +
  geom_bar()
```

# Exercise 12

```{r}
# A stacked bar plot
# How are the "historical" and "winner_20" variables mapped to the plot, i.e. what roles do they play?
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar()
```

```{r}
# A faceted bar plot
ggplot(elections, aes(x = winner_20)) +
  geom_bar() +
  facet_wrap(~ historical)
```

```{r}
# A side-by-side bar plot
# Note the new argument to geom_bar
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar(position = "dodge")
```

```{r}
# A proportional bar plot
# Note the new argument to geom_bar
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar(position = "fill")
```

# Exercise 13

```{r}
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv")
View(weather)
```

```{r}
ggplot(weather, aes(x = temp3pm, fill = location)) +
   geom_density(alpha = 0.5)
```

