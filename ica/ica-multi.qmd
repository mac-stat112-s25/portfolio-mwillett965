---
title: "Mulivariate Viz"
---

Use this file for practice with the **mulivariate viz** in-class activity.  Refer to the class website for details.

```{r}
library(tidyverse)

# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |> 
  mutate(date = as.Date(date))  

# Check out the first 6 rows location,tem, ect
# What are the units of observation?
head(weather)

# How many data points do we have? 2367


# What type of variables do we have? numerical and catigorical
```

```{r}
# Plot 1 (no facets & starting from a density plot of temp3pm)
ggplot(weather, aes(x = temp3pm)) + 
  geom_density()+facet_wrap(~ temp3pm)
```

```{r}
ggplot(weather, aes(x = temp3pm)) + geom_histogram +
  facet_wrap(~ historical)
```

```{r}
# Don't worry about the syntax (we'll learn it soon)
woll <- weather |>
  filter(location == "Wollongong") |> 
  mutate(date = as.Date(date))  
```

```{r}
# How often does it raintoday?
# Fill your geometric layer with the color blue.
ggplot(woll, aes(x = raintoday))
# If it does raintoday, what does this tell us about raintomorrow?
# Use your intuition first
ggplot(woll, aes(x = raintoday))
# Now compare different approaches

# Default: stacked bars
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar()
# Side-by-side bars
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar(position = "dodge")
# Proportional bars
# position = "fill" refers to filling the frame, nothing to do with the color-related fill
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar(position = "fill")
```
```{r}
# Instead of a curve that captures the general TREND,
# draw a line that illustrates the movement of RAW temperatures from day to day
# NOTE: We haven't learned this geom yet! Guess.
ggplot(woll, aes(y = temp3pm, x = date))
```


```{r}
# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)
ggplot(weather, aes(y = temp3pm, x = date)) + 
  geom_line()+geom_smooth()
```

# Exercises
```{r}
# Import and check out data
education <- read.csv("https://mac-stat.github.io/data/sat.csv")
head(education)
```

```{r}
ggplot(education, aes(sat))+
  geom_histogram()
```

# Exercise 2

```{r}
ggplot(education, aes(y = expend, x = sat)) +
  geom_point()+geom_smooth()
```

```{r}
ggplot(education, aes(y = salary, x = sat)) +
  geom_point()+geom_smooth()
```

# Exercise 3

```{r}
ggplot(education, aes(y = expend, x = sat, color = salary)) +
  geom_point()+geom_smooth(se=FALSE) 
```

# Exercise 4
```{r}
ggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + 
  geom_point() + 
  geom_smooth(se = FALSE, method = "lm")
```

# Exercise 5

```{r}
ggplot(education, aes(x = fracCat)) +
  geom_bar()
```

```{r}
ggplot(education, aes(x = sat, fill = fracCat)) +
  geom_density(alpha=0.5)
```

```{r}
ggplot(education, aes(y = expend, x = sat, color = fracCat)) +
  geom_point()+geom_smooth(se=FALSE) 
```

```{r}
stars(plot_data,
  flip.labels = FALSE,
  key.loc = c(10, 1.5),
  cex = 1, 
  draw.segments = TRUE
)
```
```{r}
stars(plot_data,
  flip.labels = FALSE,
  locations = data.matrix(as.data.frame(state.center)),  # added external data to arrange by geo location
  key.loc = c(-110, 28),
  cex = 1, 
  draw.segments = TRUE
)
```

